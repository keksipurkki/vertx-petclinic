openapi: 3.0.1
info:
  title: Keksipurkki Pet Store
  description: |2+

    Sample implementation of a REST API demonstrating
    lessons learned about backend development.

    Powered by Eclipse Vert.x â€” https://vertx.io

  version: 1.0.0
servers:
- url: http://localhost:8080/petstore/v1
  variables: {}
tags:
- name: pet
  description: Everything about your pets
- name: store
  description: Access to Petstore orders
- name: user
  description: Operations about user
paths:
  /user:
    post:
      tags:
      - user
      operationId: CREATE_USER
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMessage'
      security:
      - NONE: []
  /user/createWithList:
    post:
      tags:
      - user
      operationId: CREATE_USER_LIST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMessage'
      security:
      - NONE: []
  /store/order/{orderId}:
    get:
      tags:
      - store
      operationId: GET_ORDER
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security:
      - LOGIN_SESSION: []
    delete:
      tags:
      - store
      operationId: DELETE_ORDER
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          minimum: 0
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security:
      - LOGIN_SESSION: []
  /user/{username}:
    get:
      tags:
      - user
      operationId: GET_USER_BY_NAME
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - NONE: []
    put:
      tags:
      - user
      operationId: UPDATE_USER
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - LOGIN_SESSION: []
    delete:
      tags:
      - user
      operationId: DELETE_USER
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMessage'
      security:
      - LOGIN_SESSION: []
  /store/inventory:
    get:
      tags:
      - store
      operationId: GET_INVENTORY
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
      security:
      - NONE: []
  /user/login:
    get:
      tags:
      - user
      operationId: LOGIN_USER
      parameters:
      - name: username
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
      security:
      - NONE: []
  /user/logout:
    get:
      tags:
      - user
      operationId: LOGOUT_USER
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMessage'
      security:
      - LOGIN_SESSION: []
  /store/order:
    post:
      tags:
      - store
      operationId: PLACE_ORDER
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrder'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security:
      - LOGIN_SESSION: []
components:
  schemas:
    ApiMessage:
      type: object
      properties:
        message:
          type: string
    User:
      required:
      - email
      - firstName
      - id
      - lastName
      - password
      - username
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
      description: User data
    Order:
      type: object
      properties:
        orderId:
          type: integer
          format: int32
        petId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
    AccessToken:
      type: object
      properties:
        token:
          type: string
    NewOrder:
      type: object
      properties:
        petId:
          type: integer
          format: int32
        quantity:
          minimum: 1
          type: integer
          format: int32
  securitySchemes:
    LOGIN_SESSION:
      type: http
      scheme: bearer
      bearerFormat: JWT
